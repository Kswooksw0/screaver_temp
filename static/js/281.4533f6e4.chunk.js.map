{"version":3,"file":"static/js/281.4533f6e4.chunk.js","mappings":"6JACA,QAAsC,wCAAtC,EAAsF,0B,sBCG/E,MAAMA,EAAaA,KAGtBC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAA2BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAaC,SAAC,gBAC9BC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,cACLC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,2BACLC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,eACLC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,0BACLC,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAACC,gBARG,wDCJ1B,EAAwB,2BAAxB,EAA0E,0CAA1E,EAA8H,6BAA9H,EAA0K,kCCE7JC,EAAcA,KAEzB,MAEMC,GAAaC,EAAAA,EAAAA,QAAO,MA6B1B,OA3BAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAW,IAAIC,sBAClBC,IACCA,EAAQC,SAASC,IACXA,EAAMC,iBACRD,EAAME,OAAOC,UAAUC,IAAIjB,GAC3BS,EAASS,UAAUL,EAAME,QAC3B,GACA,GAEJ,CAAEI,UAAW,KAUf,OAJIb,EAAWc,SACbX,EAASY,QAAQf,EAAWc,SAGvB,KACDd,EAAWc,SACbX,EAASS,UAAUZ,EAAWc,QAChC,CACD,GACA,KAGDtB,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAArB,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAaC,SAAC,kBAC7BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAA6BuB,IAAKjB,EAAWL,SAlClD,CAAC,eAAgB,cAAe,cAAe,eAmChDuB,KAAI,CAACC,EAASC,KACpBxB,EAAAA,EAAAA,KAAA,OAAiBH,UAAWC,EAAoBC,UAC9CC,EAAAA,EAAAA,KAAA,UACEyB,MAAM,MACNC,OAAO,MACPC,IAAK,iCAAiCJ,IACtCK,MAAO,cAAcJ,EAAQ,IAC7BK,MAAM,wEACNC,iBAAe,KAPTN,SAYb,ECpDP,EAAuC,0CAAvC,EAAiG,mCAAjG,EAA2I,0BAA3I,EAAkL,gCAAlL,EAAkO,mCAAlO,EAAsR,oCC+CtR,EAzCoBO,MAElBzB,EAAAA,EAAAA,YAAU,KAEP0B,YAAW,KACV,MAAMC,EAAcC,SAASC,cAAc,IAAIrC,KACzCsC,EAAoBF,SAASC,cAAc,IAAIrC,KAGjDmC,GACFA,EAAYnB,UAAUC,IAAIjB,GAExBsC,GACFA,EAAkBtB,UAAUC,IAAIjB,EAClC,GACC,IAAI,GACN,KAGDF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAA4BC,SAAA,EAC1CC,EAAAA,EAAAA,KAACqC,EAAAA,EAAK,KACNrC,EAAAA,EAAAA,KAACsC,EAAAA,EAAO,KACRtC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAqBC,UACnCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAYC,SAAC,keAU/BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAkBC,UAChCC,EAAAA,EAAAA,KAACL,EAAU,OAEbK,EAAAA,EAAAA,KAACG,EAAW,O","sources":["webpack://screamot/./src/components/Tokenomics/Tokenomics.module.css?e37c","components/Tokenomics/Tokenomics.jsx","webpack://screamot/./src/components/MemeGallery/MemeGallery.module.css?b94c","components/MemeGallery/MemeGallery.jsx","webpack://screamot/./src/pages/AboutScream/AboutScream.module.css?c926","pages/AboutScream/AboutScream.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"tokenomicsContainer\":\"Tokenomics_tokenomicsContainer__AU+6t\",\"title\":\"Tokenomics_title__5eJQD\"};","import React from \"react\";\nimport styles from \"./Tokenomics.module.css\";\nimport { ContractAddress } from \"../ContractAddress/ContractAddress\";\n\nexport const Tokenomics = () => {\n  const contractAddress = \"CA: 7GCihgDB8fe6KNjn2MYtkzZcRJQy3t9GHdC8uHYmW2hr\";\n  return (\n    <div className={styles.tokenomicsContainer}>\n      <div className={styles.title}>Tokenomics</div>\n      <div> 0/0 Tax</div>\n      <div>Liquidity Pool Burnt </div>\n      <div>Immutable</div>\n      <div>100% Community Owned</div>\n      <ContractAddress contractAddress={contractAddress} />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MemeGallery_title__nnJuU\",\"memeGalleryContainer\":\"MemeGallery_memeGalleryContainer__Gf0Xn\",\"visible\":\"MemeGallery_visible__NcH4A\",\"videoWrapper\":\"MemeGallery_videoWrapper__dYA5C\"};","import React, { useEffect, useRef } from \"react\";\nimport styles from \"./MemeGallery.module.css\";\n\nexport const MemeGallery = () => {\n  // Array of YouTube video IDs or URLs\n  const videos = [\"ykOG5fVqGD0 \", \"Q4ZcZDLV7Dc\", \"5YMIoBUPDsw\", \"FBh9c2f2fXI\"];\n\n  const galleryRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            entry.target.classList.add(styles.visible); // Add class when in view\n            observer.unobserve(entry.target); // Stop observing once it's visible\n          }\n        });\n      },\n      { threshold: 0.1 } // Trigger when 10% of the element is visible\n    );\n    // The \"element\" refers to the specific HTML element that is being observed by the IntersectionObserver. \n    // In this case, it is the div with the class memeGalleryContainer that is referenced by galleryRef. \n    // This means the observer is watching this container, and it will trigger when 10% of this container becomes visible in the viewport.\n\n    if (galleryRef.current) {\n      observer.observe(galleryRef.current);\n    }\n\n    return () => {\n      if (galleryRef.current) {\n        observer.unobserve(galleryRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <>\n      <h1 className={styles.title}>Meme Gallery</h1>\n      <div className={styles.memeGalleryContainer} ref={galleryRef}>\n        {videos.map((videoId, index) => (\n          <div key={index} className={styles.videoWrapper}>\n            <iframe\n              width=\"560\"\n              height=\"315\"\n              src={`https://www.youtube.com/embed/${videoId}`}\n              title={`Meme video ${index + 1}`}\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope;\"\n              allowFullScreen\n            ></iframe>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\n// title={`Meme video ${index + 1}`}\n","// extracted by mini-css-extract-plugin\nexport default {\"aboutScreamContainer\":\"AboutScream_aboutScreamContainer__MxZ8u\",\"descContainer\":\"AboutScream_descContainer__ycAuW\",\"desc\":\"AboutScream_desc__Q7IXk\",\"tokenomics\":\"AboutScream_tokenomics__trS18\",\"slide-in-left\":\"AboutScream_slide-in-left__2ibze\",\"slide-in-right\":\"AboutScream_slide-in-right__JogoY\"};","import React, { useEffect } from \"react\";\nimport { Title } from \"../../components/Title/Title\";\nimport { Socials } from \"../../components/Socials/Socials\";\nimport { Tokenomics } from \"../../components/Tokenomics/Tokenomics\";\nimport { MemeGallery } from \"../../components/MemeGallery/MemeGallery\";\nimport styles from \"./AboutScream.module.css\";\n\nconst AboutScream = () => {\n\n  useEffect(() => {\n     // Use setTimeout to delay adding the class to ensure elements are rendered\n     setTimeout(() => {\n      const descElement = document.querySelector(`.${styles.descContainer}`);\n      const tokenomicsElement = document.querySelector(`.${styles.tokenomics}`);\n\n      // Ensure the elements exist before trying to modify them\n      if (descElement) {\n        descElement.classList.add(styles['slide-in-left']);\n      }\n      if (tokenomicsElement) {\n        tokenomicsElement.classList.add(styles['slide-in-right']);\n      }\n    }, 200); // Slight delay to ensure rendering\n  }, []);\n\n  return (\n    <div className={styles.aboutScreamContainer}>\n      <Title />\n      <Socials />\n      <div className={styles.descContainer}>\n        <div className={styles.desc}>\n          The Screaming Marmot meme originates from a 2015 video posted by\n          Instagram user @lonegoatsoap, capturing a marmot making a high-pitched\n          noise at Blackcomb Mountain, Whistler, British Columbia. The video\n          went viral after being dubbed with a human-like scream, turning it\n          into a symbol of exaggerated emotional expression. Over time, it\n          went viral across platforms like YouTube and Vine, often used humorously\n          to represent absurd or cathartic reactions to everyday situations.\n        </div>\n      </div>\n      <div className={styles.tokenomics}>\n        <Tokenomics />\n      </div>\n      <MemeGallery/>\n    </div>\n  );\n};\n\nexport default AboutScream;\n"],"names":["Tokenomics","_jsxs","className","styles","children","_jsx","ContractAddress","contractAddress","MemeGallery","galleryRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","unobserve","threshold","current","observe","_Fragment","ref","map","videoId","index","width","height","src","title","allow","allowFullScreen","AboutScream","setTimeout","descElement","document","querySelector","tokenomicsElement","Title","Socials"],"sourceRoot":""}